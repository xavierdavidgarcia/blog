<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Xavier Garcia</title>
    <link>/tags/python/</link>
    <description>Recent content in Python on Xavier Garcia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 23 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>What is TensorFLow</title>
      <link>/post/what_is_tensor_flow/</link>
      <pubDate>Tue, 23 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/what_is_tensor_flow/</guid>
      <description>What is TensorFlow? If you&amp;rsquo;ve been following the machine learning community, in particular that of deep learning, over the last year, you&amp;rsquo;ve probably heard of Tensorflow. Tensorflow is a library to structure and run numerical computations developed in-house by Google Brain (the people who developed Alpha-GO). One can imagine this library as an extension of NumPY to work on more scalable architectures, as well as with more detailed algorithms and methods that pertain specifically to machine learning.</description>
    </item>
    
    <item>
      <title>Decision trees in python</title>
      <link>/post/decision_trees_in_python/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/decision_trees_in_python/</guid>
      <description>Explained Decision trees are a form of supervised learning that can be used for both classification and regression purposes. In my experience, they are typically utilized for classification purposes. The model takes in an instance and then goes down the tree, testing significant features against a determined conditional statement. Depending on the result, it will go down to the left or right child branch and onward after that. Typically the most significant features in the process will fall closer to the root of the tree.</description>
    </item>
    
    <item>
      <title>Logistic Regression in python</title>
      <link>/post/logistic_regression_in_python/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/logistic_regression_in_python/</guid>
      <description>Explained Logistic regression is a supervised classification algorithm and therefore is useful for estimating discrete values. It is typically used for predicting the probability of an event using the logistic function in order to get an output between 0 and 1.
When first learning this logistic regression, I was under the impression that it was a sort of a niche thing and therefore I didnâ€™t give it my full attention.</description>
    </item>
    
    <item>
      <title>Linear Regression in python</title>
      <link>/post/linear_regression_in_python/</link>
      <pubDate>Fri, 02 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>/post/linear_regression_in_python/</guid>
      <description>Linear Regression Perhaps the most popular machine learning algorithm out there and definitely the most under appreciated. Many data scientists have a tendency to forget that simpler is almost always preferred over complex when performance is comparable.
Anyways, linear regression is a supervised learning algorithm that predicts an outcome based on continuous features. Linear regression is versatile in the sense that it has the ability to be run on a single variable (simple linear regression) or on many features (multiple linear regression).</description>
    </item>
    
    <item>
      <title>Linear Regression in python</title>
      <link>/post/template-5/</link>
      <pubDate>Tue, 14 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>/post/template-5/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>